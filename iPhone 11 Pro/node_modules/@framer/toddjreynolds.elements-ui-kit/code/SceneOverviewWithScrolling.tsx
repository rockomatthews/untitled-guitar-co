import * as React from "react"
import {
    Frame,
    addPropertyControls,
    ControlType,
    Scroll,
    motionValue,
    useTransform,
    Stack,
} from "framer"
import { colors } from "./canvas"
import { Icon, iconNames } from "./Icon"
// Learn more: https://framer.com/api

// contentOffset is for the large title scrolling behavior
const contentOffset = motionValue(0)

export function SceneOverviewWithScrolling(props) {
    const { text, tint, onTap, ...rest } = props

    const leftAction = {
        a: (
            <Frame
                id="Cancel"
                height={44}
                width="auto"
                left={16}
                top={0}
                style={{
                    fontSize: 17,
                    color: props.tint,
                    paddingTop: 10,
                }}
                background="null"
            >
                <span>Cancel</span>
            </Frame>
        ),
        b: (
            <Frame
                id="Back Arrow"
                height={40}
                width={24}
                left={16}
                top={0}
                background="null"
            >
                <Icon name={props.icon} tintColor={props.tint} />
            </Frame>
        ),
        c: null,
    }

    const rightAction = {
        a: null,
        b: (
            <Frame
                id="Save Disabled"
                height={44}
                width="auto"
                right={16}
                top={0}
                style={{
                    fontSize: 17,
                    fontWeight: 600,
                    color: "#585f66",
                    paddingTop: 10,
                }}
                background="null"
            >
                <span>Save</span>
            </Frame>
        ),
        c: (
            <Frame
                id="Save Enabled"
                height={44}
                width="auto"
                right={16}
                top={0}
                style={{
                    fontSize: 17,
                    fontWeight: 600,
                    color: props.tint,
                    paddingTop: 10,
                }}
                background="null"
            >
                <span>Save</span>
            </Frame>
        ),
        d: (
            <Frame
                id="Edit"
                height={44}
                width="auto"
                right={16}
                top={0}
                style={{
                    fontSize: 17,
                    color: props.tint,
                    paddingTop: 10,
                }}
                background="null"
            >
                <span>Edit</span>
            </Frame>
        ),
        e: (
            <Frame
                id="Close Button"
                height={40}
                width={24}
                right={16}
                top={0}
                background="null"
            >
                <Icon name="Close" tintColor={props.tint} />
            </Frame>
        ),
    }

    // height and opacity are for the scrolling effect in the large title navigation bar.

    const height = useTransform(contentOffset, [0, -52, -52], [96, 44, 44], {
        clamp: false,
    })
    const opacity = useTransform(contentOffset, [-20, -52], [0, 1])

    return (
        <Frame id="Container" {...rest} background={colors.Black} onTap={onTap}>
            <Scroll
                id="Content"
                contentOffsetY={contentOffset}
                bottom={83}
                top={48}
                width="100%"
                backgroundColor={null}
                style={{
                    paddingTop: 88,
                    paddingBottom: 104,
                }}
            >
                <Stack height="auto">{props.children}</Stack>
            </Scroll>
            <Frame
                id="Navbar"
                height={height}
                width={375}
                top={44}
                background={colors.Black}
            >
                <Frame
                    id="Large Title"
                    bottom={9}
                    left={16}
                    size="auto"
                    style={{
                        fontWeight: 800,
                        fontSize: 34,
                        color: "white",
                    }}
                    background="null"
                >
                    <span>{props.title}</span>
                </Frame>
                <Frame
                    id="Actions"
                    height={44}
                    width={375}
                    top={0}
                    background={colors.Black}
                >
                    {leftAction[props.leftAction]}
                    <Frame
                        id="Small Title"
                        {...rest}
                        height={38}
                        bottom={0}
                        style={{
                            fontWeight: 800,
                            fontSize: 18,
                            color: "white",
                            opacity: opacity,
                        }}
                        background="null"
                    >
                        {props.title}
                    </Frame>
                    {rightAction[props.rightAction]}
                </Frame>
            </Frame>
            <Stack
                id="Home Indicator Bar"
                background="null"
                height={13}
                width="100%"
                bottom={0}
            >
                <Frame
                    background="#ffffff"
                    height={5}
                    width={134}
                    radius={2.5}
                />
            </Stack>
        </Frame>
    )
}

SceneOverviewWithScrolling.defaultProps = {
    height: 812,
    width: 375,
    title: "Elements",
    tint: "#4af196",
    leftAction: "b",
    icon: "Share",
}

// Learn more: https://framer.com/api/property-controls/
addPropertyControls(SceneOverviewWithScrolling, {
    leftAction: {
        title: "Left Action",
        type: ControlType.Enum,
        options: ["a", "b", "c"],
        optionTitles: ["Cancel", "Icon", "None"],
        defaultValue: "c",
    },
    showIcon: {
        title: "Icon?",
        type: ControlType.Boolean,
        defaultValue: true,
        enabledTitle: "Yes",
        disabledTitle: "No",
    },
    icon: {
        title: "Icon",
        type: ControlType.Enum,
        options: iconNames.sort(),
        defaultValue: "Share",
        hidden(props) {
            return props.showIcon === false
        },
    },
    rightAction: {
        title: "Right Action",
        type: ControlType.Enum,
        options: ["a", "b", "c", "d", "e"],
        optionTitles: [
            "None",
            "Save (Disabled)",
            "Save (Enabled)",
            "Edit",
            "Close",
        ],
        defaultValue: "a",
    },
    title: {
        title: "Title",
        type: ControlType.String,
        defaultValue: "Elements",
    },
    tint: {
        title: "Tint",
        type: ControlType.Color,
        defaultValue: "#4af196",
    },
    children: {
        title: "Content",
        type: ControlType.ComponentInstance,
    },
    onTap: {
        type: ControlType.EventHandler,
    },
})
