import * as React from "react"
import { Frame, addPropertyControls, ControlType, Stack } from "framer"
import { colors } from "./Colors"
import { Icon, iconNames } from "./Icon"
import { PrimaryButton } from "./PrimaryButton"
import { InlineButton } from "./InlineButton"

// Learn more: https://framer.com/api

export function Prompt(props) {
    const {
        title,
        type,
        subtitle,
        text,
        tint,
        name,
        onTap,
        action1,
        action2,
        actions,
        ...rest
    } = props

    const includeMedia = {
        true: (
            <Stack
                id="Media"
                width="100%"
                height="auto"
                paddingTop={16}
                background="null"
            >
                {props.showMedia ? props.child : null}
            </Stack>
        ),

        false: null,
    }
    const numberOfActions = {
        b: (
            <Stack
                id="Buttons"
                gap={16}
                alignment="center"
                height="auto"
                width="100%"
                paddingLeft={8}
                paddingRight={8}
                background={null}
            >
                <PrimaryButton width="100%" label={action1} tint={tint} />
            </Stack>
        ),

        c: (
            <Stack
                id="Buttons"
                gap={16}
                alignment="center"
                height="auto"
                width="100%"
                paddingLeft={8}
                paddingRight={8}
                background={null}
            >
                <PrimaryButton width="100%" label={action1} tint={tint} />
                <PrimaryButton width="100%" label={action2} tint={tint} />
            </Stack>
        ),

        a: null,
    }

    return (
        <Frame
            {...rest}
            background={null}
            overflow="show"
            width="100%"
            style={{
                borderRadius: 30,
            }}
        >
            <Stack
                id="Container"
                gap={32}
                left={8}
                right={8}
                distribution="start"
                alignment="center"
                height="auto"
                width="auto"
                style={{
                    padding: "20px 24px 32px 24px",
                    borderRadius: 30,
                    shadow: "inset 0 1px 1px 0 rgba(255, 255, 255, 0.12)",
                    boxShadow: "0 2px 20px rgba(0,0,0,0.5)",
                }}
                background={colors.grayDark}
            >
                <Stack
                    id="Text Content"
                    gap={24}
                    distribution="start"
                    alignment="start"
                    height="auto"
                    width="100%"
                    background={null}
                >
                    <Stack
                        id="Title Group"
                        gap={4}
                        distribution="start"
                        alignment="start"
                        height="auto"
                        width="90%"
                        background={null}
                    >
                        <Frame
                            id="Prompt Title"
                            width="auto"
                            height="auto"
                            background={null}
                            style={{
                                fontWeight: 700,
                                fontSize: 24,
                                color: colors.white,
                            }}
                        >
                            <span>{title}</span>
                        </Frame>
                        <Frame
                            id="Task Type"
                            width="auto"
                            height="auto"
                            background={null}
                            style={{
                                fontWeight: 400,
                                fontSize: 15,
                                color: colors.grayLight,
                            }}
                        >
                            <span>{props.showType ? type : null}</span>
                        </Frame>
                    </Stack>
                    <Stack
                        id="Body Group"
                        gap={2}
                        distribution="start"
                        alignment="start"
                        height="auto"
                        width="100%"
                        background={null}
                    >
                        <Frame
                            id="Subtitle"
                            width="auto"
                            height="auto"
                            background={null}
                            style={{
                                fontWeight: 600,
                                fontSize: 17,
                                lineHeight: "22px",
                                color: colors.white,
                            }}
                        >
                            <span>{props.showSubtitle ? subtitle : null}</span>
                        </Frame>
                        <Frame
                            id="Body"
                            width="auto"
                            height="auto"
                            background={null}
                            style={{
                                fontWeight: 400,
                                fontSize: 16,
                                lineHeight: "24px",
                                color: colors.grayLight,
                            }}
                        >
                            <span>{text}</span>
                        </Frame>
                        {includeMedia[props.showMedia]}
                    </Stack>
                </Stack>

                {numberOfActions[actions]}
            </Stack>

            <Frame id="Icon" size={24} top={24} right={24} background="null">
                <Icon name={name} tintColor={tint} />
            </Frame>
        </Frame>
    )
}

Prompt.defaultProps = {
    height: "auto",
    width: 359,
    title: "Prompt Title",
    showType: true,
    type: "Quick Task",
    showSubtitle: false,
    showMedia: false,
    subtitle: "Subtitle…",
    text:
        "Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.",
    action1: "Go Ahead",
    action2: "Make My Day",
    actions: "b",
    name: "Alarm Clock",
    tint: colors.appTint,
}

// Learn more: https://framer.com/api/property-controls/
addPropertyControls(Prompt, {
    title: {
        title: "Title",
        type: ControlType.String,
        defaultValue: "Prompt Title",
    },
    showType: {
        title: "Type?",
        type: ControlType.Boolean,
        enabledTitle: "Yay",
        disabledTitle: "Nay",
    },
    type: {
        title: "Type",
        type: ControlType.String,
        defaultValue: "Prompt Type",
        hidden(props) {
            return props.showType === false
        },
    },
    showSubtitle: {
        title: "Subtitle?",
        type: ControlType.Boolean,
        defaultValue: true,
        enabledTitle: "Yes",
        disabledTitle: "Nope",
    },
    subtitle: {
        title: "Subtitle",
        type: ControlType.String,
        defaultValue: "Subtitle…",
        hidden(props) {
            return props.showSubtitle === false
        },
    },
    text: {
        title: "Body",
        type: ControlType.String,
        defaultValue: "Body text here…",
        displayTextArea: true,
    },
    actions: {
        title: "Actions",
        type: ControlType.Enum,
        options: ["a", "b", "c"],
        optionTitles: ["0", "1", "2"],
        defaultValue: "b",
        displaySegmentedControl: true,
    },
    action1: {
        title: "Action 1",
        type: ControlType.String,
        defaultValue: "Action 1",
        hidden(props) {
            return props.actions === "a"
        },
    },
    action2: {
        title: "Action 2",
        type: ControlType.String,
        defaultValue: "Action 2",
        hidden(props) {
            return props.actions !== "c"
        },
    },
    name: {
        title: "Icon",
        type: ControlType.Enum,
        options: iconNames.sort(),
        defaultValue: "Alarm Clock",
    },
    tint: {
        title: "Tint",
        type: ControlType.Color,
        defaultValue: colors.appTint,
    },
    showMedia: {
        title: "Media?",
        type: ControlType.Boolean,
        defaultValue: false,
        enabledTitle: "Yeah",
        disabledTitle: "Nah",
    },
    child: {
        title: "Media",
        type: ControlType.ComponentInstance,
        hidden(props) {
            return props.showMedia === false
        },
    },
    onTap: {
        type: ControlType.EventHandler,
    },
})
