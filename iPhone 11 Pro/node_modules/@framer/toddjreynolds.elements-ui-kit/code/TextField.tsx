import * as React from "react"
import { Frame, addPropertyControls, ControlType, Stack } from "framer"
import { colors } from "./Colors"
import { Icon, iconNames } from "./Icon"

// Learn more: https://framer.com/api

export function TextField(props) {
    const { label, isActive, value, tint, ...rest } = props

    const labelStates = {
        a: {
            fontSize: 18,
            height: 24,
            left: 40,
            top: 28,
            color: colors.grayMedium,
            background: null,
        },
        b: {},
        c: {
            fontSize: 12,
            height: 14,
            left: 36,
            top: 2,
            color: tint,
            background: colors.grayDark,
            padding: "0 4px",
        },
        d: {
            fontSize: 12,
            height: 14,
            left: 36,
            top: 2,
            color: colors.grayMedium,
            background: colors.grayDark,
            padding: "0 4px",
        },
        e: {
            fontSize: 18,
            height: 24,
            left: 40,
            top: 28,
            color: colors.white,
            background: null,
        },
    }

    const borderStates = {
        a: {
            borderColor: colors.grayMedium,
        },
        b: {
            borderColor: colors.grayMedium,
        },
        c: {
            borderColor: tint,
        },
        d: {
            borderColor: colors.grayMedium,
        },
        e: {
            borderColor: colors.grayMedium,
        },
    }

    const showRequired = {
        a: (
            <Frame
                id="Label"
                variants={labelStates}
                initial={labelStates[props.style]}
                width="auto"
            >
                {label}
            </Frame>
        ),

        b: (
            <Stack
                id="Required Label Stack"
                height="auto"
                width="auto"
                gap={0}
                distribution="center"
                alignment="start"
                top={21}
                background="null"
            >
                <Frame
                    id="Label"
                    height={24}
                    right={props.showIcon ? 52 : 16}
                    left={40}
                    top={0}
                    color={colors.grayMedium}
                    background="null"
                >
                    {label}
                </Frame>
                <Frame
                    id="Required"
                    background={null}
                    height="auto"
                    width="auto"
                    left={40}
                    color={colors.grayMedium}
                    opacity={0.6}
                    style={{
                        fontSize: 13,
                    }}
                >
                    Required
                </Frame>
            </Stack>
        ),
        c: (
            <Frame
                id="Label"
                variants={labelStates}
                initial={labelStates[props.style]}
                width="auto"
            >
                {label}
            </Frame>
        ),
        d: (
            <Frame
                id="Label"
                variants={labelStates}
                initial={labelStates[props.style]}
                width="auto"
            >
                {label}
            </Frame>
        ),
        e: (
            <Frame
                id="Label"
                variants={labelStates}
                initial={labelStates[props.style]}
                width="auto"
            >
                {label}
            </Frame>
        ),
    }

    const showValue = {
        a: null,
        b: null,
        c: (
            <Stack
                id="Active Value"
                direction="horizontal"
                distribution="start"
                alignment="start"
                gap={1}
                height="auto"
                width="90%"
                top={28}
                left={40}
            >
                <Frame
                    id="Value"
                    height={24}
                    width="auto"
                    color={colors.white}
                    background={null}
                >
                    {value}
                </Frame>
                <Frame id="Cursor" height={24} width={1} background={tint} />
            </Stack>
        ),
        d: (
            <Stack
                id="Active Value"
                direction="horizontal"
                distribution="start"
                alignment="start"
                gap={1}
                height="auto"
                width="90%"
                top={28}
                left={40}
            >
                <Frame
                    id="Value"
                    height={24}
                    width="auto"
                    color={colors.white}
                    background={null}
                >
                    {value}
                </Frame>
            </Stack>
        ),
    }

    const hasIcon = {
        true: (
            <Frame size={24} top={28} right={40} background={null}>
                <Icon name={props.icon} tintColor={tint} />
            </Frame>
        ),
        false: null,
    }

    return (
        <Frame
            {...rest}
            left={0}
            right={0}
            width="100%"
            background={null}
            style={{
                fontSize: 18,
                fontWeight: 400,
            }}
        >
            <Frame
                id="Border"
                variants={borderStates}
                initial={borderStates[props.style]}
                height={64}
                left={24}
                right={24}
                top={8}
                radius={6}
                background={null}
                opacity={0.4}
                style={{
                    borderWidth: 1,
                    borderStyle: "solid",
                }}
            />
            {showRequired[props.style]}
            {showValue[props.style]}
            {hasIcon[props.showIcon]}
        </Frame>
    )
}

TextField.defaultProps = {
    height: 88,
    width: 375,
    label: "Label Placeholder",
    style: "e",
    isRequired: true,
    value: "Opine on this",
    tint: colors.business,
    icon: "Drop Down",
    showIcon: true,
}

// Learn more: https://framer.com/api/property-controls/
addPropertyControls(TextField, {
    style: {
        title: "Style",
        type: ControlType.Enum,
        options: ["a", "b", "c", "d", "e"],
        optionTitles: ["Inactive", "Required", "Active", "Completed", "Toggle"],
        defaultValue: "a",
    },
    label: {
        title: "Text",
        type: ControlType.String,
        defaultValue: "Label Me!",
    },
    value: {
        title: "Value",
        type: ControlType.String,
        defaultValue: "#VALUE",
        hidden(props) {
            return (
                props.style === "a" ||
                props.style === "b" ||
                props.style === "e"
            )
        },
    },
    showIcon: {
        title: "Icon?",
        type: ControlType.Boolean,
        defaultValue: false,
    },
    icon: {
        title: "Icon",
        type: ControlType.Enum,
        options: iconNames.sort(),
        defaultValue: "Drop Down",
        hidden(props) {
            return props.showIcon === false
        },
    },
    tint: {
        title: "Tint",
        type: ControlType.Color,
        defaultValue: colors.appTint,
    },
    onTap: {
        type: ControlType.EventHandler,
    },
})
